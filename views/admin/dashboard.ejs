<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Sherubtse College</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <%- include('../partials/admin-header') %>

  <main class="container py-4">
    <% if (locals.success_msg) { %>
      <div class="alert alert-success" role="alert">
        <%= success_msg %>
      </div>
    <% } %>
    
    <% if (locals.error_msg) { %>
      <div class="alert alert-danger" role="alert">
        <%= error_msg %>
      </div>
    <% } %>

    <div class="row">
      <div class="col-md-12 mb-4">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Admin Dashboard</h5>
            <span class="badge bg-primary">Admin</span>
          </div>
          <div class="card-body">
            <p>Welcome, <%= user.name %>!</p>
            <p>Use the dashboard to manage users, courses, and view attendance reports.</p>
          </div>
        </div>
      </div>
    </div>

    <div class="row mb-4">
      <div class="col-md-4">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title text-muted">Total Users</h5>
            <h2 class="display-4" id="total-users">
              <!-- Use default value if totalUsers is not defined -->
              <%= typeof totalUsers !== 'undefined' ? totalUsers : 6 %>
            </h2>
            <p class="text-muted" id="user-breakdown">
              <!-- Use default values if students or faculty are not defined -->
              <%= typeof students !== 'undefined' ? students : 3 %> students, 
              <%= typeof faculty !== 'undefined' ? faculty : 2 %> faculty
            </p>
          </div>
        </div>
      </div>
      
      <div class="col-md-4">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title text-muted">Total Courses</h5>
            <h2 class="display-4" id="total-courses">
              <!-- Use default value if totalCourses is not defined -->
              <%= typeof totalCourses !== 'undefined' ? totalCourses : 4 %>
            </h2>
            <p class="text-muted" id="course-breakdown">
              Across <%= typeof departments !== 'undefined' ? departments : 3 %> departments
            </p>
          </div>
        </div>
      </div>
      
      <div class="col-md-4">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title text-muted">Average Attendance</h5>
            <h2 class="display-4" id="avg-attendance">
              <!-- Use default value if avgAttendance is not defined -->
              <%= typeof avgAttendance !== 'undefined' ? avgAttendance : 90 %>%
            </h2>
            <p class="text-muted">Across all courses</p>
          </div>
        </div>
      </div>
    </div>

    <ul class="nav nav-tabs mb-4" id="myTab" role="tablist">
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab" aria-controls="users" aria-selected="true">Manage Users</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="courses-tab" data-bs-toggle="tab" data-bs-target="#courses" type="button" role="tab" aria-controls="courses" aria-selected="false">Manage Courses</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="reports-tab" data-bs-toggle="tab" data-bs-target="#reports" type="button" role="tab" aria-controls="reports" aria-selected="false">Attendance Reports</button>
      </li>
    </ul>

    <div class="tab-content" id="myTabContent">
      <!-- Users Tab -->
      <div class="tab-pane fade show active" id="users" role="tabpanel" aria-labelledby="users-tab">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">User Management</h5>
          </div>
          <div class="card-body">
            <div class="row mb-3">
              <div class="col-md-6">
                <div class="input-group">
                  <input type="text" class="form-control" id="user-search" placeholder="Search by name or email...">
                  <button class="btn btn-outline-secondary" type="button">Search</button>
                </div>
              </div>
              <div class="col-md-3">
                <select class="form-select" id="role-filter">
                  <option value="all">All Roles</option>
                  <option value="student">Students</option>
                  <option value="faculty">Faculty</option>
                  <option value="admin">Admins</option>
                </select>
              </div>
              <div class="col-md-3 text-end">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">Add User</button>
              </div>
            </div>
            
            <div class="table-responsive">
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="users-table">
                  <!-- Will be populated via JavaScript -->
                  <tr>
                    <td colspan="5" class="text-center">Loading users...</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Courses Tab -->
      <div class="tab-pane fade" id="courses" role="tabpanel" aria-labelledby="courses-tab">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">Course Management</h5>
          </div>
          <div class="card-body">
            <div class="row mb-3">
              <div class="col-md-9">
                <div class="input-group">
                  <input type="text" class="form-control" id="course-search" placeholder="Search courses...">
                  <button class="btn btn-outline-secondary" type="button">Search</button>
                </div>
              </div>
              <div class="col-md-3 text-end">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCourseModal">Add Course</button>
              </div>
            </div>
            
            <div class="table-responsive">
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>Course Code</th>
                    <th>Course Name</th>
                    <th>Faculty</th>
                    <th>Students</th>
                    <th>Department</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="courses-table">
                  <!-- Will be populated via JavaScript -->
                  <tr>
                    <td colspan="6" class="text-center">Loading courses...</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Reports Tab -->
      <div class="tab-pane fade" id="reports" role="tabpanel" aria-labelledby="reports-tab">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">Attendance Reports</h5>
          </div>
          <div class="card-body">
            <div class="row mb-3">
              <div class="col-md-3">
                <label for="date-range" class="form-label">Date Range</label>
                <select class="form-select" id="date-range">
                  <option value="today">Today</option>
                  <option value="thisWeek" selected>This Week</option>
                  <option value="thisMonth">This Month</option>
                  <option value="lastMonth">Last Month</option>
                  <option value="custom">Custom Range</option>
                </select>
              </div>
              <div class="col-md-3">
                <label for="department-filter" class="form-label">Department</label>
                <select class="form-select" id="department-filter">
                  <option value="all" selected>All Departments</option>
                  <option value="cs">Computer Science</option>
                  <option value="math">Mathematics</option>
                  <option value="physics">Physics</option>
                </select>
              </div>
              <div class="col-md-6 text-end align-self-end">
                <button class="btn btn-outline-secondary me-2">Export to CSV</button>
                <button class="btn btn-outline-secondary" onclick="window.print()">Print Report</button>
              </div>
            </div>
            
            <div class="table-responsive">
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>Course Code</th>
                    <th>Course Name</th>
                    <th>Present</th>
                    <th>Absent</th>
                    <th>Attendance %</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="reports-table">
                  <!-- Will be populated via JavaScript -->
                  <tr>
                    <td colspan="6" class="text-center">Loading reports...</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Add User Modal -->
  <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="add-user-form" action="/admin/users/add" method="POST">
            <div class="mb-3">
              <label for="user-name" class="form-label">Full Name</label>
              <input type="text" class="form-control" id="user-name" name="name" required>
            </div>
            <div class="mb-3">
              <label for="user-email" class="form-label">Institutional Email</label>
              <input type="email" class="form-control" id="user-email" name="email" required>
              <div id="email-role-detection" class="form-text"></div>
            </div>
            <div class="mb-3">
              <label for="user-role" class="form-label">Role</label>
              <select class="form-control" id="user-role" name="role" required>
                <option value="student">Student</option>
                <option value="faculty">Faculty</option>
                <option value="admin">Admin</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="user-password" class="form-label">Password</label>
              <input type="password" class="form-control" id="user-password" name="password" required>
            </div>
            <!-- Student-specific fields (shown/hidden based on role) -->
            <div id="student-fields" style="display: none;">
              <div class="mb-3">
                <label for="user-department" class="form-label">Department</label>
                <select class="form-control" id="user-department" name="department">
                  <option value="Computer Science">Computer Science</option>
                  <option value="Mathematics">Mathematics</option>
                  <option value="Physics">Physics</option>
                  <option value="English">English</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="user-year" class="form-label">Year</label>
                <select class="form-control" id="user-year" name="year">
                  <option value="1">First Year</option>
                  <option value="2">Second Year</option>
                  <option value="3">Third Year</option>
                  <option value="4">Fourth Year</option>
                </select>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="save-user-btn">Save User</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Course Modal -->
  <div class="modal fade" id="addCourseModal" tabindex="-1" aria-labelledby="addCourseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addCourseModalLabel">Add New Course</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="add-course-form" action="/admin/courses/add" method="POST">
            <div class="mb-3">
              <label for="course-code" class="form-label">Course Code</label>
              <input type="text" class="form-control" id="course-code" name="id" required>
            </div>
            <div class="mb-3">
              <label for="course-name" class="form-label">Course Name</label>
              <input type="text" class="form-control" id="course-name" name="name" required>
            </div>
            <div class="mb-3">
              <label for="course-faculty" class="form-label">Faculty</label>
              <select class="form-control" id="course-faculty" name="facultyId" required>
                <option value="">Select Faculty</option>
                <!-- Will be populated via JavaScript -->
              </select>
            </div>
            <div class="mb-3">
              <label for="course-department" class="form-label">Department</label>
              <select class="form-control" id="course-department" name="department" required>
                <option value="Computer Science">Computer Science</option>
                <option value="Mathematics">Mathematics</option>
                <option value="Physics">Physics</option>
                <option value="English">English</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="course-students" class="form-label">Number of Students</label>
              <input type="number" class="form-control" id="course-students" name="students" min="1" value="30" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="save-course-btn">Save Course</button>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/footer') %>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Load users data
      function loadUsers() {
        // In a real implementation, this would fetch from your API
        // For this example, we'll use mock data
        const mockUsers = [
          { id: 1, name: 'John Smith', email: '12345.sherubtse@rub.edu.bt', role: 'student', status: 'active' },
          { id: 2, name: 'Jane Doe', email: '12346.sherubtse@rub.edu.bt', role: 'student', status: 'active' },
          { id: 3, name: 'Dr. Robert Johnson', email: 'robert.sherubtse@rub.edu.bt', role: 'faculty', status: 'active' },
          { id: 4, name: 'Prof. Sarah Williams', email: 'sarah.sherubtse@rub.edu.bt', role: 'faculty', status: 'active' },
          { id: 5, name: 'Admin User', email: 'admin.sherubtse@rub.edu.bt', role: 'admin', status: 'active' },
          { id: 6, name: 'Charlie Brown', email: '12349.sherubtse@rub.edu.bt', role: 'student', status: 'inactive' }
        ];
        
        const usersTable = document.getElementById('users-table');
        let html = '';
        
        mockUsers.forEach(user => {
          html += `
            <tr>
              <td>${user.name}</td>
              <td>${user.email}</td>
              <td><span class="text-capitalize">${user.role}</span></td>
              <td>
                <span class="badge ${user.status === 'active' ? 'bg-success' : 'bg-danger'}">
                  ${user.status}
                </span>
              </td>
              <td>
                <button class="btn btn-sm btn-outline-secondary me-1">Edit</button>
                <form action="/admin/users/update-status" method="POST" style="display: inline;">
                  <input type="hidden" name="userId" value="${user.id}">
                  <input type="hidden" name="status" value="${user.status === 'active' ? 'inactive' : 'active'}">
                  <button type="submit" class="btn btn-sm ${user.status === 'active' ? 'btn-outline-danger' : 'btn-outline-success'}">
                    ${user.status === 'active' ? 'Deactivate' : 'Activate'}
                  </button>
                </form>
              </td>
            </tr>
          `;
        });
        
        usersTable.innerHTML = html;
        
        // Populate faculty dropdown in course modal
        const facultySelect = document.getElementById('course-faculty');
        let facultyOptions = '<option value="">Select Faculty</option>';
        
        mockUsers.filter(user => user.role === 'faculty').forEach(faculty => {
          facultyOptions += `<option value="${faculty.id}">${faculty.name}</option>`;
        });
        
        facultySelect.innerHTML = facultyOptions;
      }
      
      // Load courses data
      function loadCourses() {
        // In a real implementation, this would fetch from your API
        // For this example, we'll use mock data
        const mockCourses = [
          { id: 'CSC101', name: 'Introduction to Computer Science', faculty: 'Dr. Robert Johnson', students: 45, department: 'Computer Science' },
          { id: 'CSC202', name: 'Data Structures and Algorithms', faculty: 'Dr. Robert Johnson', students: 38, department: 'Computer Science' },
          { id: 'MTH201', name: 'Calculus II', faculty: 'Prof. Sarah Williams', students: 52, department: 'Mathematics' },
          { id: 'PHY102', name: 'Physics for Engineers', faculty: 'Dr. Michael Brown', students: 41, department: 'Physics' }
        ];
        
        const coursesTable = document.getElementById('courses-table');
        let html = '';
        
        mockCourses.forEach(course => {
          html += `
            <tr>
              <td>${course.id}</td>
              <td>${course.name}</td>
              <td>${course.faculty}</td>
              <td>${course.students}</td>
              <td>${course.department}</td>
              <td>
                <button class="btn btn-sm btn-outline-secondary me-1">Edit</button>
                <button class="btn btn-sm btn-outline-secondary">View</button>
              </td>
            </tr>
          `;
        });
        
        coursesTable.innerHTML = html;
      }
      
      // Load reports data
      function loadReports() {
        // In a real implementation, this would fetch from your API
        // For this example, we'll use mock data
        const mockReports = [
          { id: 'CSC101', name: 'Introduction to Computer Science', present: 40, absent: 5, percentage: 89 },
          { id: 'CSC202', name: 'Data Structures and Algorithms', present: 35, absent: 3, percentage: 92 },
          { id: 'MTH201', name: 'Calculus II', present: 48, absent: 4, percentage: 92 },
          { id: 'PHY102', name: 'Physics for Engineers', present: 36, absent: 5, percentage: 88 }
        ];
        
        const reportsTable = document.getElementById('reports-table');
        let html = '';
        
        mockReports.forEach(report => {
          html += `
            <tr>
              <td>${report.id}</td>
              <td>${report.name}</td>
              <td>${report.present}</td>
              <td>${report.absent}</td>
              <td>
                <div class="d-flex align-items-center">
                  <div class="progress flex-grow-1 me-2" style="height: 8px;">
                    <div class="progress-bar bg-success" role="progressbar" style="width: ${report.percentage}%"></div>
                  </div>
                  <span>${report.percentage}%</span>
                </div>
              </td>
              <td>
                <button class="btn btn-sm btn-outline-secondary">View Details</button>
              </td>
            </tr>
          `;
        });
        
        reportsTable.innerHTML = html;
      }
      
      // Email role detection for add user form
      const userEmail = document.getElementById('user-email');
      const emailRoleDetection = document.getElementById('email-role-detection');
      const userRole = document.getElementById('user-role');
      const studentFields = document.getElementById('student-fields');
      
      userEmail.addEventListener('input', function() {
        const email = this.value.toLowerCase();
        
        if (email.match(/^\d+\.sherubtse@rub\.edu\.bt$/)) {
          emailRoleDetection.innerHTML = 'Detected role: <span class="fw-bold text-success">Student</span>';
          userRole.value = 'student';
          studentFields.style.display = 'block';
        } else if (email.match(/^[a-zA-Z]+\.sherubtse@rub\.edu\.bt$/)) {
          emailRoleDetection.innerHTML = 'Detected role: <span class="fw-bold text-success">Faculty</span>';
          userRole.value = 'faculty';
          studentFields.style.display = 'none';
        } else if (email.match(/^admin\.sherubtse@rub\.edu\.bt$/)) {
          emailRoleDetection.innerHTML = 'Detected role: <span class="fw-bold text-success">Admin</span>';
          userRole.value = 'admin';
          studentFields.style.display = 'none';
        } else if (email.endsWith('@rub.edu.bt')) {
          emailRoleDetection.innerHTML = 'Invalid email format. Please use the correct institutional email format.';
          studentFields.style.display = 'none';
        } else {
          emailRoleDetection.innerHTML = '';
          studentFields.style.display = 'none';
        }
      });
      
      // Toggle student fields based on role selection
      userRole.addEventListener('change', function() {
        if (this.value === 'student') {
          studentFields.style.display = 'block';
        } else {
          studentFields.style.display = 'none';
        }
      });
      
      // Save user button
      document.getElementById('save-user-btn').addEventListener('click', function() {
        const form = document.getElementById('add-user-form');
        
        if (form.checkValidity()) {
          form.submit();
        } else {
          form.reportValidity();
        }
      });
      
      // Save course button
      document.getElementById('save-course-btn').addEventListener('click', function() {
        const form = document.getElementById('add-course-form');
        
        if (form.checkValidity()) {
          form.submit();
        } else {
          form.reportValidity();
        }
      });
      
      // Initialize
      loadUsers();
      loadCourses();
      loadReports();
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
